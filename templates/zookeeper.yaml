# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
---

- kind: ConfigMap
  apiVersion: v1
  metadata:
    name: "zookeeper-config"
    namespace: "{{ namespace }}"
  data:
    count_replicas: "{{ zookeeper_replicas }}"
    jvm.heap: "1G"
    tick: "2000"
    init: "10"
    sync: "5"
    client.cnxns: "60"
    snap.retain: "3"
    purge.interval: "0"

- apiVersion: v1
  kind: Service
  metadata:
    name: "zookeeper-hs-svc"
    namespace: "{{ namespace }}"
    labels:
      app: "zookeeper-svc"
      service: "zuul"
  spec:
    ports:
      - port: 2888
        name: "server"
      - port: 3888
        name: "leader-election"
    # clusterIP: None
    selector:
      app: "zookeeper"

- apiVersion: v1
  kind: Service
  metadata:
    name: "zookeeper-svc"
    namespace: "{{ namespace }}"
    labels:
      app: "zookeeper-svc"
      service: "zuul"
  spec:
    ports:
      - port: 2181
        name: "client"
    selector:
      app: "zookeeper"

- apiVersion: v1
  kind: StatefulSet
  metadata:
    name: "zookeeper"
    namespace: "{{ namespace }}"
  spec:
    selector:
      matchLabels:
        app: "zookeeper"
    serviceName: "zookeeper-hs-svc"
    replicas: {{ zookeeper_replicas }}
    updateStrategy:
      type: "RollingUpdate"
    podManagementPolicy: "Parallel"
    revisionHistoryLimit: 2
    template:
      metadata:
        labels:
          app: "zookeeper"
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              - labelSelector:
                  matchExpressions:
                    - key: "app"
                      operator: In
                      values:
                        - "zookeeper"
                topologyKey: "kubernetes.io/hostname"
        containers:
          - name: "zk"
            image: "{{ zookeeper_image_name }}"
            imagePullPolicy: "Always"
            resources: {{ zookeeper_resources | to_json }}
            ports:
              - containerPort: 2181
                name: "client"
              - containerPort: 2888
                name: "server"
              - containerPort: 3888
                name: "leader-election"
            env:
              - name: "ZK_REPLICAS"
                valueFrom:
                  configMapKeyRef:
                    name: "zookeeper-config"
                    key: count_replicas
              - name: "ZK_CLIENT_PORT"
                value: "2181"
              - name: "ZK_SERVER_PORT"
                value: "2888"
              - name: "ZK_ELECTION_PORT"
                value: "3888"
              - name: "ZK_HEAP_SIZE"
                valueFrom:
                  configMapKeyRef:
                    name: "zookeeper-config"
                    key: "jvm.heap"
              - name: "ZK_TICK_TIME"
                valueFrom:
                  configMapKeyRef:
                    name: "zookeeper-config"
                    key: "tick"
              - name: "ZK_INIT_LIMIT"
                valueFrom:
                  configMapKeyRef:
                    name: "zookeeper-config"
                    key: "init"
              - name: "ZK_SYNC_LIMIT"
                valueFrom:
                  configMapKeyRef:
                    name: "zookeeper-config"
                    key: "tick"
              - name: "ZK_MAX_CLIENT_CNXNS"
                valueFrom:
                  configMapKeyRef:
                    name: "zookeeper-config"
                    key: "client.cnxns"
              - name: "ZK_SNAP_RETAIN_COUNT"
                valueFrom:
                  configMapKeyRef:
                    name: "zookeeper-config"
                    key: "snap.retain"
              - name: "ZK_PURGE_INTERVAL"
                valueFrom:
                  configMapKeyRef:
                    name: "zookeeper-config"
                    key: "purge.interval"
            readinessProbe:
              exec:
                command:
                  - "zkOk.sh"
              initialDelaySeconds: 10
              timeoutSeconds: 5
            livenessProbe:
              exec:
                command:
                  - "zkOk.sh"
              initialDelaySeconds: 10
              timeoutSeconds: 5
            volumeMounts:
              - name: "datadir"
                mountPath: /opt/app-root/data
    volumeClaimTemplates:
      - metadata:
          name: "datadir"
        spec:
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: "{{ zookeeper_local_storage }}"
